ignorePatterns:
  - "*.config.js"
  - "dist"
parser: '@typescript-eslint/parser'
parserOptions:
  project: './tsconfig.json'
extends:
  - "eslint:recommended"
  - "plugin:@typescript-eslint/recommended"
  - "plugin:@typescript-eslint/recommended-requiring-type-checking"
  - "plugin:@typescript-eslint/strict"
  - "plugin:sonarjs/recommended"
  - "plugin:react/recommended"
  - "plugin:react-hooks/recommended"
  - "plugin:cypress/recommended"
  - "plugin:jest/recommended"
  - "prettier"
settings:
  react:
    version: "detect"
plugins:
  - "cypress"
  - "import"
  - "unused-imports"
  - "sonarjs"
rules:
  "complexity":
    - "error"
    - 11
  "@typescript-eslint/no-unused-vars":
    - "error"
    - vars: "all"
      args: "after-used"
      argsIgnorePattern: "_"
      ignoreRestSiblings: false
      varsIgnorePattern: "_"
  "@typescript-eslint/no-misused-promises":
    - "error"
    - checksVoidReturn:
        arguments: false
        attributes: false
  "react/prop-types": "off"
  "react/react-in-jsx-scope": "off"
  "unused-imports/no-unused-imports": "error"
  "unused-imports/no-unused-vars":
    - "warn"
    - "vars": "all"
      "varsIgnorePattern": "^_"
      "args": "after-used"
      "argsIgnorePattern": "^_"
  "import/order":
    - error
    - groups:
        - builtin
        - external
        - internal
        - parent
        - sibling
        - type
        - index
        - object
      pathGroups:
        - pattern: react
          group: external
          position: before
      newlines-between: always-and-inside-groups
      pathGroupsExcludedImportTypes:
        - react
      alphabetize:
        order: asc
        caseInsensitive: true
